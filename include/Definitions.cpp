#include "Definitions.hpp"
std::string PYTHON_COMMAND(std::string input_file, std::string output_file, std::string python_path){
    return python_path + " -c \"in_file_path = \'" + input_file + "\'\n\r"
                       "out_file_path = \'" + output_file + "\'\n\r"
                       "from os.path import isfile\n\r"
                       "assert isfile(in_file_path), 'Error! File ' + in_file_path + ' didnt exist!'\n\r"
                       "try:\n\r"
                       "    from matplotlib import pyplot as plt\n\r"
                       "except ImportError:\n\r"
                       "    raise ImportError('Please install matplotlib in order to save figures.')\n\r"
                       "time_stamp = []\n\r"
                       "bit_rate_in = []\n\r"
                       "bit_rate_out = []\n\r"
                       "buffer_occupation = []\n\r"
                       "buffer_length = []\n\r"
                       "with open(in_file_path, 'r') as file_r:\n\r"
                       "    headers = file_r.readline().split(',')\n\r"
                       "    while True:\n\r"
                       "        line = file_r.readline()\n\r"
                       "        if not line:\n\r"
                       "            break\n\r"
                       "\n\r"
                       "        [_time_stamp, _bit_rate_in, _bit_rate_out, _buffer_occupation, _buffer_length, _last_char] = line.split(',')\n\r"
                       "\n\r"
                       "        time_stamp.append(float(_time_stamp))\n\r"
                       "        bit_rate_in.append(int(_bit_rate_in))\n\r"
                       "        bit_rate_out.append(int(_bit_rate_out))\n\r"
                       "        buffer_occupation.append(int(_buffer_occupation))\n\r"
                       "        buffer_length.append(int(_buffer_length))\n\r"
                       "\n\r"
                       "plt.figure()\n\r"
                       "plt.plot(time_stamp, bit_rate_in, label='bits in (bit)')\n\r"
                       "plt.plot(time_stamp, bit_rate_out, label='bits out (bit)')\n\r"
                       "plt.plot(time_stamp, buffer_occupation, '--', label='buffer occupation (bit)')\n\r"
                       "plt.plot(time_stamp, buffer_length, '--', label='buffer size (bit)')\n\r"
                       "plt.title('Buffer Statistics')\n\r"
                       "plt.legend()\n\r"
                       "plt.xlabel('time (s)')\n\r"
                       "plt.ylabel('bits (bit)')\n\r"
                       "plt.grid(True)\n\r"
                       "plt.savefig(out_file_path)\n\r\"";
}