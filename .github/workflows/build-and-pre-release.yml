name: Build and Publish Pre Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      trigger:
        required: false
        description: "Manual Trigger"
        default: 'workflow_dispatcher'
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  
jobs:
  build-source:
    # Environment where to build
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]

    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build Source
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Test Build
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    # Below a refactor is needed! (Not looking good)
    - name: Upload Manual Buffer Size to a GitHub Release (Ubuntu)
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/manual_buffer_size
        asset_name: manual_buffer_size-linux_amd64
        tag: latest
        overwrite: true
        prerelease: true
        body: "${{ env.BUILD_TYPE }} for ${{ matrix.platform }}"

    - name: Upload Auto Buffer Size to a GitHub Release (Ubuntu)
      if: ${{ matrix.platform == 'ubuntu-latest' }}
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/auto_buffer_size
        asset_name: auto_buffer_size-linux_amd64
        tag: latest
        overwrite: true
        prerelease: true
        body: "${{ env.BUILD_TYPE }} for ${{ matrix.platform }}"

    - name: Upload Manual Buffer Size to a GitHub Release (Windows)
      if: ${{ matrix.platform == 'windows-latest' }}
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build\${{ env.BUILD_TYPE }}\manual_buffer_size.exe
        asset_name: manual_buffer_size-windows_amd64.exe
        tag: latest
        overwrite: true
        prerelease: true
        body: "${{ env.BUILD_TYPE }} for ${{ matrix.platform }}"

    - name: Upload Auto Buffer Size to a GitHub Release (Windows)
      if: ${{ matrix.platform == 'windows-latest' }}
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build\${{ env.BUILD_TYPE }}\auto_buffer_size.exe
        asset_name: auto_buffer_size-windows_amd64.exe
        tag: latest
        overwrite: true
        prerelease: true
        body: "${{ env.BUILD_TYPE }} for ${{ matrix.platform }}"
